"use strict";

var _react = _interopRequireWildcard(require("react"));

var _addons = _interopRequireDefault(require("@storybook/addons"));

var _title = _interopRequireDefault(require("./title"));

var _jsx = _interopRequireDefault(require("./jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var Observable = function Observable(channel, api) {
  return function (listener) {
    channel.on('kadira/jsx/add_jsx', listener.next('jsx'));
    api.onStory(listener.next('current'));
  };
};

_addons.default.register('kadira/jsx', function (api) {
  var ob = Observable(_addons.default.getChannel(), api);

  _addons.default.addPanel('kadira/jsx/panel', {
    title: _title.default,
    render: function render(_ref) {
      var active = _ref.active;
      return _react.default.createElement(_jsx.default, {
        active: active,
        ob: ob
      });
    }
  });
});