{"version":3,"file":"static/iframe.15d42de9c129c20e2291.bundle.js","sources":["webpack:///./lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _addons = _interopRequireDefault(require(\"@storybook/addons\"));\n\nvar _reactElementToJsxString = _interopRequireDefault(require(\"react-element-to-jsx-string\"));\n\nvar _jsBeautify = require(\"js-beautify\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar applyBeforeRender = function applyBeforeRender(domString, options) {\n  if (typeof options.onBeforeRender !== 'function') {\n    return domString;\n  }\n\n  return options.onBeforeRender(domString);\n};\n\nvar renderJsx = function renderJsx(code, options) {\n  for (var i = 0; i < options.skip; i++) {\n    if (typeof code === 'undefined') {\n      console.warn('Cannot skip undefined element');\n      return;\n    }\n\n    if (_react.default.Children.count(code) > 1) {\n      console.warn('Trying to skip an array of elements');\n      return;\n    }\n\n    if (typeof code.props.children === 'undefined') {\n      console.warn('Not enough children to skip elements.');\n      if (typeof code.type === 'function' && code.type.name === '') code = code.type(code.props);\n    } else {\n      if (typeof code.props.children === 'function') {\n        code = code.props.children();\n      } else {\n        code = code.props.children;\n      }\n    }\n  }\n\n  if (typeof code === 'undefined') return console.warn('Too many skip or undefined component');\n\n  while (typeof code.type === 'function' && code.type.name === '') {\n    code = code.type(code.props);\n  }\n\n  var ooo = typeof options.displayName === 'string' ? Object.assign({}, options, {\n    showFunctions: true,\n    displayName: function displayName() {\n      return options.displayName;\n    }\n  }) : options;\n  return _react.default.Children.map(code, function (c) {\n    return applyBeforeRender((0, _reactElementToJsxString.default)(c, ooo), options);\n  }).join('\\n');\n};\n\nvar _default = {\n  addWithJSX: function addWithJSX(kind, storyFn) {\n    var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var defaultOpts = {\n      skip: 0,\n      showFunctions: true,\n      enableBeautify: true\n    };\n    var options = Object.assign({}, defaultOpts, opts);\n\n    var channel = _addons.default.getChannel();\n\n    var result = this.add(kind, function (context) {\n      var story = storyFn(context);\n      var jsx = '';\n\n      if (story.template) {\n        if (options.enableBeautify) {\n          jsx = (0, _jsBeautify.html)(story.template, options);\n        } else {\n          jsx = story.template;\n        }\n      } else {\n        jsx = renderJsx(story, options);\n      }\n\n      channel.emit('kadira/jsx/add_jsx', result.kind, kind, jsx);\n      return story;\n    });\n    return result;\n  }\n};\nexports.default = _default;"],"mappings":"AAEA","sourceRoot":""}